" ~/.vimrc - configuração no arch linux
" Plugins instalados no pacman:
" vim vim-runtime vim-airline vim-airline-themes vim-ale vim-auto-pairs
" vim-ctrlp vim-devicons vim-easymotion vim-fugitive vim-gitgutter
" vim-nerdtree vim-molokai (opcionais: vim-syntastic, vim-supertab, vim-bufexplorer, vim-tabular)

set nocompatible                " modo Vim (não vi)
filetype plugin indent on       " filetype + plugins + indent
syntax on                       " syntax highlighting

" Conveniências: leader (defina antes dos mappings)
let mapleader = " "             " leader = space

" Interface
set termguicolors               " truecolor se suportado
set background=dark             " tema: dark/light
set number                      " número absoluto
colorscheme elflord
" set cursorline                " não usar cursorline
set signcolumn=yes              " coluna de sinais fixa
set showcmd                     " mostra comando parcial
set title                       " mostra nome no título do terminal
set laststatus=2                " sempre mostrar statusline
let &statusline = '%f %= %y %= [%{&encoding}] %= [linha: %l/%L] %= [col: %c] %= [%p%%] %= [%{&fileformat}]'

" Indentação e tabs
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent

" Busca
set ignorecase
set smartcase
set incsearch
set hlsearch

" Usabilidade
set scrolloff=5
set wrap
set mouse=a
set clipboard=unnamedplus
set backspace=indent,eol,start

" Arquivos temporários (diretórios locais)
set undodir=~/.vim/undo
set undofile                    " undo persistente
" (backup/swap podem ser ativados direcionando para ~/.vim/* se quiser)
" set backupdir=~/.vim/backup//
" set directory=~/.vim/swap//
" set backup
" set writebackup

" Performance
set ttyfast
set timeoutlen=500

" Plugins: configurações diretas
" Airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme = 'behelit'

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_working_path_mode = 0

" NERDTree (toggle com <leader>n)
nnoremap <leader>n :NERDTreeToggle<CR>

" EasyMotion (exemplo de uso)
nmap <Leader><Leader>w <Plug>(easymotion-w)

" ALE - linting e fixers
let g:ale_fix_on_save = 1
let g:ale_fixers = {
\   '*': ['remove_trailing_lines','trim_whitespace'],
\   'python': ['black'],
\   'rust': ['rustfmt'],
\}
let g:ale_linters = {
\   'python': ['flake8'],
\   'c': ['gcc'],
\   'cpp': ['clang'],
\   'rust': ['rls','rust-analyzer'],
\}
let g:ale_emit_conflict_warnings = 0

" Auto pairs
let g:AutoPairsMapBS = 1

" Conveniências e mapeamentos
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>Q :q!<CR>
nnoremap <leader>bd :bdelete<CR>
inoremap jk <Esc>               " sair do modo insert com 'jk'

" Final: carregar arquivo extra se existir
if filereadable(expand("~/.vim/pluginrc.vim"))
  source ~/.vim/pluginrc.vim
endif
